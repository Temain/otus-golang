// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.5.1
// source: rotation.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BannerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title int64 `protobuf:"varint,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *BannerMessage) Reset() {
	*x = BannerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rotation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerMessage) ProtoMessage() {}

func (x *BannerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rotation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerMessage.ProtoReflect.Descriptor instead.
func (*BannerMessage) Descriptor() ([]byte, []int) {
	return file_rotation_proto_rawDescGZIP(), []int{0}
}

func (x *BannerMessage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BannerMessage) GetTitle() int64 {
	if x != nil {
		return x.Title
	}
	return 0
}

type AddBannerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BannerId int64 `protobuf:"varint,1,opt,name=bannerId,proto3" json:"bannerId,omitempty"`
	SlotId   int64 `protobuf:"varint,2,opt,name=slotId,proto3" json:"slotId,omitempty"`
}

func (x *AddBannerRequest) Reset() {
	*x = AddBannerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rotation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBannerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBannerRequest) ProtoMessage() {}

func (x *AddBannerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rotation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBannerRequest.ProtoReflect.Descriptor instead.
func (*AddBannerRequest) Descriptor() ([]byte, []int) {
	return file_rotation_proto_rawDescGZIP(), []int{1}
}

func (x *AddBannerRequest) GetBannerId() int64 {
	if x != nil {
		return x.BannerId
	}
	return 0
}

func (x *AddBannerRequest) GetSlotId() int64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

type AddBannerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Banner *BannerMessage `protobuf:"bytes,1,opt,name=banner,proto3" json:"banner,omitempty"`
}

func (x *AddBannerResponse) Reset() {
	*x = AddBannerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rotation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBannerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBannerResponse) ProtoMessage() {}

func (x *AddBannerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rotation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBannerResponse.ProtoReflect.Descriptor instead.
func (*AddBannerResponse) Descriptor() ([]byte, []int) {
	return file_rotation_proto_rawDescGZIP(), []int{2}
}

func (x *AddBannerResponse) GetBanner() *BannerMessage {
	if x != nil {
		return x.Banner
	}
	return nil
}

type DeleteBannerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BannerId int64 `protobuf:"varint,1,opt,name=bannerId,proto3" json:"bannerId,omitempty"`
	SlotId   int64 `protobuf:"varint,2,opt,name=slotId,proto3" json:"slotId,omitempty"`
}

func (x *DeleteBannerRequest) Reset() {
	*x = DeleteBannerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rotation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBannerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBannerRequest) ProtoMessage() {}

func (x *DeleteBannerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rotation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBannerRequest.ProtoReflect.Descriptor instead.
func (*DeleteBannerRequest) Descriptor() ([]byte, []int) {
	return file_rotation_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteBannerRequest) GetBannerId() int64 {
	if x != nil {
		return x.BannerId
	}
	return 0
}

func (x *DeleteBannerRequest) GetSlotId() int64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

type DeleteBannerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteBannerResponse) Reset() {
	*x = DeleteBannerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rotation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBannerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBannerResponse) ProtoMessage() {}

func (x *DeleteBannerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rotation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBannerResponse.ProtoReflect.Descriptor instead.
func (*DeleteBannerResponse) Descriptor() ([]byte, []int) {
	return file_rotation_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteBannerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ClickBannerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BannerId int64 `protobuf:"varint,1,opt,name=bannerId,proto3" json:"bannerId,omitempty"`
	SlotId   int64 `protobuf:"varint,2,opt,name=slotId,proto3" json:"slotId,omitempty"`
	GroupId  int64 `protobuf:"varint,3,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *ClickBannerRequest) Reset() {
	*x = ClickBannerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rotation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClickBannerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickBannerRequest) ProtoMessage() {}

func (x *ClickBannerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rotation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickBannerRequest.ProtoReflect.Descriptor instead.
func (*ClickBannerRequest) Descriptor() ([]byte, []int) {
	return file_rotation_proto_rawDescGZIP(), []int{5}
}

func (x *ClickBannerRequest) GetBannerId() int64 {
	if x != nil {
		return x.BannerId
	}
	return 0
}

func (x *ClickBannerRequest) GetSlotId() int64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *ClickBannerRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type ClickBannerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ClickBannerResponse) Reset() {
	*x = ClickBannerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rotation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClickBannerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickBannerResponse) ProtoMessage() {}

func (x *ClickBannerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rotation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickBannerResponse.ProtoReflect.Descriptor instead.
func (*ClickBannerResponse) Descriptor() ([]byte, []int) {
	return file_rotation_proto_rawDescGZIP(), []int{6}
}

func (x *ClickBannerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetBannerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotId  int64 `protobuf:"varint,1,opt,name=slotId,proto3" json:"slotId,omitempty"`
	GroupId int64 `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *GetBannerRequest) Reset() {
	*x = GetBannerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rotation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBannerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBannerRequest) ProtoMessage() {}

func (x *GetBannerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rotation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBannerRequest.ProtoReflect.Descriptor instead.
func (*GetBannerRequest) Descriptor() ([]byte, []int) {
	return file_rotation_proto_rawDescGZIP(), []int{7}
}

func (x *GetBannerRequest) GetSlotId() int64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *GetBannerRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type GetBannerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BannerId int64 `protobuf:"varint,1,opt,name=bannerId,proto3" json:"bannerId,omitempty"`
}

func (x *GetBannerResponse) Reset() {
	*x = GetBannerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rotation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBannerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBannerResponse) ProtoMessage() {}

func (x *GetBannerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rotation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBannerResponse.ProtoReflect.Descriptor instead.
func (*GetBannerResponse) Descriptor() ([]byte, []int) {
	return file_rotation_proto_rawDescGZIP(), []int{8}
}

func (x *GetBannerResponse) GetBannerId() int64 {
	if x != nil {
		return x.BannerId
	}
	return 0
}

var File_rotation_proto protoreflect.FileDescriptor

var file_rotation_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x0d, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x46,
	0x0a, 0x10, 0x41, 0x64, 0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x49, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6c,
	0x6f, 0x74, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x62, 0x0a, 0x12, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x13, 0x43, 0x6c,
	0x69, 0x63, 0x6b, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x44, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x22, 0x2f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x32, 0xa0, 0x02, 0x0a, 0x0f, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rotation_proto_rawDescOnce sync.Once
	file_rotation_proto_rawDescData = file_rotation_proto_rawDesc
)

func file_rotation_proto_rawDescGZIP() []byte {
	file_rotation_proto_rawDescOnce.Do(func() {
		file_rotation_proto_rawDescData = protoimpl.X.CompressGZIP(file_rotation_proto_rawDescData)
	})
	return file_rotation_proto_rawDescData
}

var file_rotation_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_rotation_proto_goTypes = []interface{}{
	(*BannerMessage)(nil),        // 0: proto.BannerMessage
	(*AddBannerRequest)(nil),     // 1: proto.AddBannerRequest
	(*AddBannerResponse)(nil),    // 2: proto.AddBannerResponse
	(*DeleteBannerRequest)(nil),  // 3: proto.DeleteBannerRequest
	(*DeleteBannerResponse)(nil), // 4: proto.DeleteBannerResponse
	(*ClickBannerRequest)(nil),   // 5: proto.ClickBannerRequest
	(*ClickBannerResponse)(nil),  // 6: proto.ClickBannerResponse
	(*GetBannerRequest)(nil),     // 7: proto.GetBannerRequest
	(*GetBannerResponse)(nil),    // 8: proto.GetBannerResponse
}
var file_rotation_proto_depIdxs = []int32{
	0, // 0: proto.AddBannerResponse.banner:type_name -> proto.BannerMessage
	1, // 1: proto.RotationService.AddBanner:input_type -> proto.AddBannerRequest
	3, // 2: proto.RotationService.DeleteBanner:input_type -> proto.DeleteBannerRequest
	5, // 3: proto.RotationService.ClickBanner:input_type -> proto.ClickBannerRequest
	7, // 4: proto.RotationService.GetBanner:input_type -> proto.GetBannerRequest
	2, // 5: proto.RotationService.AddBanner:output_type -> proto.AddBannerResponse
	4, // 6: proto.RotationService.DeleteBanner:output_type -> proto.DeleteBannerResponse
	6, // 7: proto.RotationService.ClickBanner:output_type -> proto.ClickBannerResponse
	8, // 8: proto.RotationService.GetBanner:output_type -> proto.GetBannerResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_rotation_proto_init() }
func file_rotation_proto_init() {
	if File_rotation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rotation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rotation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBannerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rotation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBannerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rotation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBannerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rotation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBannerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rotation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClickBannerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rotation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClickBannerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rotation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBannerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rotation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBannerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rotation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rotation_proto_goTypes,
		DependencyIndexes: file_rotation_proto_depIdxs,
		MessageInfos:      file_rotation_proto_msgTypes,
	}.Build()
	File_rotation_proto = out.File
	file_rotation_proto_rawDesc = nil
	file_rotation_proto_goTypes = nil
	file_rotation_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RotationServiceClient is the client API for RotationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RotationServiceClient interface {
	// Добавляет новый баннер в ротацию в данном слоте.
	AddBanner(ctx context.Context, in *AddBannerRequest, opts ...grpc.CallOption) (*AddBannerResponse, error)
	// Удаляет баннер из ротации в данном слоте.
	DeleteBanner(ctx context.Context, in *DeleteBannerRequest, opts ...grpc.CallOption) (*DeleteBannerResponse, error)
	// Увеличивает счетчик переходов на 1 для указанного баннера в данном слоте в указанной группе.
	ClickBanner(ctx context.Context, in *ClickBannerRequest, opts ...grpc.CallOption) (*ClickBannerResponse, error)
	// Возвращает баннер который следует показать в данный момент в указанном слоте для указанной соц-дем. группы.
	// Увеличивает число показов баннера в группе.
	GetBanner(ctx context.Context, in *GetBannerRequest, opts ...grpc.CallOption) (*GetBannerResponse, error)
}

type rotationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRotationServiceClient(cc grpc.ClientConnInterface) RotationServiceClient {
	return &rotationServiceClient{cc}
}

func (c *rotationServiceClient) AddBanner(ctx context.Context, in *AddBannerRequest, opts ...grpc.CallOption) (*AddBannerResponse, error) {
	out := new(AddBannerResponse)
	err := c.cc.Invoke(ctx, "/proto.RotationService/AddBanner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rotationServiceClient) DeleteBanner(ctx context.Context, in *DeleteBannerRequest, opts ...grpc.CallOption) (*DeleteBannerResponse, error) {
	out := new(DeleteBannerResponse)
	err := c.cc.Invoke(ctx, "/proto.RotationService/DeleteBanner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rotationServiceClient) ClickBanner(ctx context.Context, in *ClickBannerRequest, opts ...grpc.CallOption) (*ClickBannerResponse, error) {
	out := new(ClickBannerResponse)
	err := c.cc.Invoke(ctx, "/proto.RotationService/ClickBanner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rotationServiceClient) GetBanner(ctx context.Context, in *GetBannerRequest, opts ...grpc.CallOption) (*GetBannerResponse, error) {
	out := new(GetBannerResponse)
	err := c.cc.Invoke(ctx, "/proto.RotationService/GetBanner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RotationServiceServer is the server API for RotationService service.
type RotationServiceServer interface {
	// Добавляет новый баннер в ротацию в данном слоте.
	AddBanner(context.Context, *AddBannerRequest) (*AddBannerResponse, error)
	// Удаляет баннер из ротации в данном слоте.
	DeleteBanner(context.Context, *DeleteBannerRequest) (*DeleteBannerResponse, error)
	// Увеличивает счетчик переходов на 1 для указанного баннера в данном слоте в указанной группе.
	ClickBanner(context.Context, *ClickBannerRequest) (*ClickBannerResponse, error)
	// Возвращает баннер который следует показать в данный момент в указанном слоте для указанной соц-дем. группы.
	// Увеличивает число показов баннера в группе.
	GetBanner(context.Context, *GetBannerRequest) (*GetBannerResponse, error)
}

// UnimplementedRotationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRotationServiceServer struct {
}

func (*UnimplementedRotationServiceServer) AddBanner(context.Context, *AddBannerRequest) (*AddBannerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddBanner not implemented")
}
func (*UnimplementedRotationServiceServer) DeleteBanner(context.Context, *DeleteBannerRequest) (*DeleteBannerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBanner not implemented")
}
func (*UnimplementedRotationServiceServer) ClickBanner(context.Context, *ClickBannerRequest) (*ClickBannerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClickBanner not implemented")
}
func (*UnimplementedRotationServiceServer) GetBanner(context.Context, *GetBannerRequest) (*GetBannerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBanner not implemented")
}

func RegisterRotationServiceServer(s *grpc.Server, srv RotationServiceServer) {
	s.RegisterService(&_RotationService_serviceDesc, srv)
}

func _RotationService_AddBanner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddBannerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RotationServiceServer).AddBanner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RotationService/AddBanner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RotationServiceServer).AddBanner(ctx, req.(*AddBannerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RotationService_DeleteBanner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBannerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RotationServiceServer).DeleteBanner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RotationService/DeleteBanner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RotationServiceServer).DeleteBanner(ctx, req.(*DeleteBannerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RotationService_ClickBanner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClickBannerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RotationServiceServer).ClickBanner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RotationService/ClickBanner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RotationServiceServer).ClickBanner(ctx, req.(*ClickBannerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RotationService_GetBanner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBannerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RotationServiceServer).GetBanner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RotationService/GetBanner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RotationServiceServer).GetBanner(ctx, req.(*GetBannerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RotationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.RotationService",
	HandlerType: (*RotationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddBanner",
			Handler:    _RotationService_AddBanner_Handler,
		},
		{
			MethodName: "DeleteBanner",
			Handler:    _RotationService_DeleteBanner_Handler,
		},
		{
			MethodName: "ClickBanner",
			Handler:    _RotationService_ClickBanner_Handler,
		},
		{
			MethodName: "GetBanner",
			Handler:    _RotationService_GetBanner_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rotation.proto",
}
